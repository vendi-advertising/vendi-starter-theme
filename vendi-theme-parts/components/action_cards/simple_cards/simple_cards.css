/* https://codepen.io/cjhaas/pen/qBeywPK */
.component-action-cards-simple-card {
    height: 100%;
    text-align: center;
    padding: var(--size-medium);
    position: relative;
    border-radius: 5px;
    isolation: isolate;

    &:where(:has(.link)) {
        padding-block-end: var(--size-large);

        &:hover {
            background-color: var(--color-brand-light-blue);
            color: var(--color-primary-white);
            transition: all 0.3s;

            & > :where(.heading) {
                color: var(--color-primary-white);
            }
        }
    }

    & > :where(.heading) {
        font-size: 2.1rem;
        line-height: calc(28 / 21);
        color: var(--color-brand-dark-gray);
    }

    & > :where(.heading, .copy) {
        z-index: 2;
        position: relative;
        cursor: pointer;
    }

    & > :where(.link) {
        /*
        There is a request to make the entire card clickable, however as of February 2025 there is still
        no good way to declaratively do it with native HTML. If link delegation ever passes, that might
        be an option. The trick for now is to absolutely position the link itself to cover the entire card,
        and treat the span inside the link as the button.
        */
        position: absolute;
        inset: 0;

        & > :where( span) {
            --local-padding: 2.75rem;
            --local-translate-x: -50%;
            position: absolute;
            color: white;
            background-color: var(--color-brand-dark-blue);
            width: 2rem;
            padding: var(--local-padding);
            display: grid;
            place-content: center;
            align-items: center;
            aspect-ratio: 1;
            border-radius: 100%;
            left: 50%;
            translate: var(--local-translate-x) calc(-1 * var(--local-padding));
            top: 100%;
            transition: all 0.3s;
            z-index: 2;

            & > :where(svg) {
                width: 2rem;
            }
        }
    }

    &:hover :where(.link > span) {
        translate: var(--local-translate-x) calc(-1 * var(--local-padding) - 0.5rem);
        background-color: var(--color-brand-primary-light);
    }
}

@media screen and (width < 64em) {
    .component-action-cards-simple-card:not(:hover) {
        background-color: var(--action-card-background-color);
    }
}
