<?php

namespace Vendi\Theme\Component;

use Vendi\Theme\TestComponentUtilsTrait;

class TestCallout extends Callout {

    use TestComponentUtilsTrait;

    private int $buttonIndex = - 1;
    private ?string $currentSelector = null;
    private mixed $currentObject = null;

    public function __construct(
        private readonly array $testData,
    ) {
        parent::__construct();
    }

    protected function initComponent(): void {
        $this->loadTestDataByExactKeys( 'copy', 'header', 'buttons' );
        $this->loadCommonContentAreaSettings();
    }

    public function getSubField( string $fieldName ): mixed {
        if ( $this->currentSelector === 'buttons' && in_array( $fieldName, [ 'call_to_action', 'icon', 'call_to_action_display_mode' ] ) ) {
            return $this->currentObject[ $fieldName ] ?? null;
        }

        return parent::getSubField( $fieldName ); // TODO: Change the autogenerated stub
    }


    public function theRow( $format = false ): void {

        if ( $this->currentSelector === 'buttons' ) {
            $this->buttonIndex ++;

            $this->currentObject = $this->fieldCache['buttons'][ $this->buttonIndex ];

            return;
        }

        parent::theRow( $format );
    }


    public function haveRows( $selector, $post_id = false ): bool {

        if ( 'buttons' === $selector ) {
            if ( ! $this->currentSelector ) {
                $this->buttonIndex     = - 1;
                $this->currentSelector = $selector;

                return count( $this->fieldCache[ $selector ] ?? [] ) > 0;
            }

            return count( $this->fieldCache[ $selector ] ) > ( $this->buttonIndex + 1 );
        }

        return parent::haveRows( $selector, $post_id );

    }
}
