:where(.component-cards) {
    --card-size: 25rem;

    :where(& > .component-wrapper ) {
        :where(& > .region) {
            max-width: 100%;

            :where(& > .content-wrap) {
                text-align: center;
                margin-inline: auto;
                max-width: 100%;
            }
        }
    }

    :where(.cards) {
        display: grid;
        grid-template-columns: var(--local-card-column-template);
        list-style-type: none;
        margin: 0;
        padding: 0;
        justify-content: center;
        --local-card-gap: var(--size-medium);
        gap: var(--local-card-gap);

        :where(& + .ctas) {
            margin-top: var(--size-medium);
        }

        &[data-card-count="1"] {
            --local-card-column-template: repeat(1, var(--card-size));
        }

        &[data-card-count="2"] {
            --local-card-column-template: repeat(2, var(--card-size));
        }

        &[data-card-count="3"] {
            --local-card-column-template: repeat(3, var(--card-size));
        }

        &[data-card-count="4"] {
            --local-card-column-template: repeat(4, var(--card-size));
        }

        &[data-card-count="5"] {
            --local-card-column-template: repeat(5, var(--card-size));
        }
    }
}

@container region (max-width: 160rem) {
    :where(.component-cards) {
        :where(.cards) {
            max-width: calc(100% - var(--size-medium) - var(--size-medium));
            margin-inline: auto;
            justify-content: center;
        }
    }
}

@container region (max-width: 110rem) {
    :where(.component-cards) {
        :where(.cards) {
            --card-size: 20rem;
        }
    }
}

:where(.component-cards:has([data-card-count="5"])) {
    :where(.cards) {
        @container region (max-width: 160rem) {
            grid-template-columns: repeat(6, calc((var(--card-size) - var(--local-card-gap)) / 2) );

            :where(& > *) {
                grid-column-end: span 2;
            }

            :where(& > :nth-child(4)) {
                grid-column-start: 2;
            }
        }
        @container region (max-width: 110rem) {
            grid-template-columns: repeat(4, calc(var(--card-size) / 2));

            :where(& > :nth-child(4)) {
                grid-column-start: unset;
            }

            :where(& > :nth-child(5)) {
                grid-column-start: 2;
            }
        }
    }
}

:where(.component-cards:has([data-card-count="4"])) {
    :where(.cards) {
        @container region (max-width: 140rem) {
            grid-template-columns: repeat(4, calc(var(--card-size) / 2));

            :where(& > *) {
                grid-column-end: span 2;
            }
        }
    }
}

:where(.component-cards:has([data-card-count="3"])) {
    :where(.cards) {
        @container region (max-width: 90rem) {
            grid-template-columns: repeat(4, calc(var(--card-size) / 2));

            :where(& > *) {
                grid-column-end: span 2;
            }

            :where(& > :nth-child(3)) {
                grid-column-start: 2;
            }
        }
    }
}

:where(.component-cards) {
    :where(.cards) {
        @container region (max-width: 73rem) {
            grid-template-columns: var(--card-size);

            :where(& > *) {
                grid-column-start: 1;
                grid-column-end: 2;
            }
        }
    }
}
