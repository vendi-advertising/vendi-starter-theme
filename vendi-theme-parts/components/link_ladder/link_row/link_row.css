:where(.component-link-ladder-preview, .component-link-ladder) {
    container-type: inline-size;
    container-name: link-ladder;

    :where(.link-rows ) {
        padding-block-start: var(--size-large);
        display: grid;
        grid-template-columns: 20rem 1fr auto;
        row-gap: var(--size-medium);
        column-gap: var(--size-medium);

        :where(.component-link-row, .component-wrapper) {
            display: contents;
        }

        :where(.link-row) {
            display: grid;
            grid-template-columns: subgrid;
            grid-column: 1 / -1;
            padding-inline: var(--size-large);
            align-items: center;

            .heading {
                margin-block: 0;
            }

            .image {
                color: var(--color-primary-black, #000);
                justify-self: center;

                svg {
                    max-width: 10rem;
                    max-height: 10rem;
                    height: 100%;
                    width: 100%;
                }
            }
        }
    }
}

@container link-ladder (max-width: 60em) {
    :where(.component-link-ladder-preview, .component-link-ladder) {
        :where(.link-rows ) {
            grid-template-columns: 10rem 1fr auto;

            :where(.link-row) {
                padding-inline: var(--size-small);
            }
        }
    }
}

/*
NOTE: This needs to be manually synced with the 60 and 45em container queries. If this component is in
a slim or narrow container, we want it to always render stacked.
*/
:where(.component-link-ladder-preview, .component-link-ladder) {
    &:where(.content-max-width-narrow, .content-max-width-slim) {
        :where(.link-rows ) {
            grid-template-columns: 10rem 1fr auto;

            :where(.link-row) {
                padding-inline: var(--size-small);
            }
        }

        :where(.link-rows ) {
            grid-template-columns: 10rem 1fr;
            grid-template-areas: "image text" "image link";

            :where(.image) {
                grid-area: image;
                grid-row: 1 / 3;
            }

            :where(.text) {
                grid-area: text;

                .heading {
                    margin-block-start: 0;
                }
            }

            :where(.link) {
                grid-area: link;
            }
        }
    }
}

@container link-ladder (max-width: 45em) {
    :where(.link-rows ) {
        grid-template-columns: 10rem 1fr;
        grid-template-areas: "image text" "image link";

        :where(.image) {
            grid-area: image;
            grid-row: 1 / 3;
        }

        :where(.text) {
            grid-area: text;

            .heading {
                margin-block-start: 0;
            }
        }

        :where(.link) {
            grid-area: link;
        }
    }
}

@container link-ladder (max-width: 30em) {
    :where(.link-rows ) {
        :where(.link-row) {
            grid-template-columns: 1fr;
            row-gap: var(--size-small);
            padding-inline: unset;

            & > * {
                grid-area: unset;
            }
        }

        svg {
            height: 6rem;
            width: auto;
        }
    }
}
